{"version":3,"sources":["profile.png","AddReply.js","apiService.js","editing.gif","EditComment.js","Replies.js","Comment.js","AddComment.js","App.js","serviceWorker.js","index.js"],"names":["AddReply","state","body","post_id","comment_id","uuidv4","parent_id","props","parentCommentId","likes","poster","poster_name","id","created_at","updated_at","handleFieldChange","comment","setState","target","name","value","createReply","storeReply","handleKeypress","e","keyCode","className","onChange","this","type","placeholder","onKeyDown","onClick","Component","ApiService","getComments","a","http","get","getReplies","storeComment","post","updateComment","put","deleteComment","delete","addLike","axios","create","baseURL","responseType","EditComment","userInfo","createEdit","storeEdit","src","profile","alt","editing","Replies","showEditForm","toggleShowEditForm","data","apiService","then","fetchReplies","r","style","fontSize","deleteReplies","Comment","replies","showReplyForm","comments","findReplies","toggleShowReplyForm","fetchComments","rep","i","length","refinedComments","push","map","AddComment","createComment","App","showCreateCommentForm","refineComments","c","toggleShowCreateCommentForm","url","users","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccd68fe6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile.f58b541a.png\";","import React, { Component } from 'react'\n\nimport { v4 as uuidv4 } from 'uuid';\n\n\nimport './index.css'\n\nclass AddReply extends Component {\n\n  state = {\n    body: '*Poster did not add a body* (Shame them). This is also my cop out for form validation for now, you caught me.',\n    //hard coding post id because there's only one post\n    post_id: '9ba7b1d5-94e0-41bd-a380-e2f953ffe58c',\n    comment_id: uuidv4(),\n    parent_id: this.props.parentCommentId,\n    likes: 0,\n    poster: uuidv4(),\n    poster_name: '*Gasp* the poster did not specify their name',\n    id: '',\n    created_at: '',\n    updated_at: ''\n  }\n\n  handleFieldChange = (comment) => {\n    this.setState({\n      [comment.target.name]: comment.target.value\n    })\n  }\n\n  createReply = () => {\n    this.props.storeReply(this.state)\n  }\n\n  handleKeypress = (e) => {\n    if (e.keyCode === 13) {\n      this.createReply()\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3\">\n            <h4 className=\"text-center mb-5\">Add a Reply</h4>\n            <div className=\"form-group\">\n              <label>\n                <input name=\"poster_name\" onChange={this.handleFieldChange} type=\"text\" className=\"form-control\" placeholder=\"Name\" />\n              </label>\n              <textarea name=\"body\" onChange={this.handleFieldChange} onKeyDown={this.handleKeypress} type=\"text\" className=\"form-control reply\" placeholder=\"Body\" />\n            </div>\n            <div className=\"form-group text-center\">\n              <button onClick={this.createReply} className=\"btn btn-success\">Post Reply</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddReply\n","import axios from 'axios'\n\nexport default class ApiService {\n  constructor() {\n    this.http = axios.create({\n      baseURL: 'https://distributed-amp-309017.wm.r.appspot.com',\n      responseType: \"json\"\n    })\n  }\n\n  getComments = async () => {\n    return this.http.get(`api/comments`)\n  }\n\n  // getComment = async (comment_id) => {\n  //   return this.http.get(`/comments/${comment_id}`)\n  // }\n\n  getReplies = async (comment_id) => {\n    return this.http.get(`api/comments/replies/${comment_id}`)\n  }\n\n  storeComment = async (comment) => {\n    return this.http.post(`api/comments`, comment)\n  }\n\n  updateComment = async (comment) => {\n    return this.http.put(`api/comments/edit/${comment.id}`, comment)\n  }\n\n  deleteComment = async (comment_id) => {\n    return this.http.delete(`api/comments/${comment_id}`)\n  }\n\n  addLike = async (comment_id) => {\n    return this.http.put(`api/comments/likes/${comment_id}`)\n  }\n\n\n}\n","export default __webpack_public_path__ + \"static/media/editing.232c79f6.gif\";","import React, { Component } from 'react'\nimport './index.css'\nimport profile from \"./profile.png\";\nimport editing from \"./editing.gif\"\n\nclass EditComment extends Component {\n\n  state = {\n    body: this.props.userInfo.body,\n    //hard coding post id because there's only one post\n    post_id: '9ba7b1d5-94e0-41bd-a380-e2f953ffe58c',\n    comment_id: this.props.userInfo.comment_id,\n    parent_id: this.props.userInfo.parent_id,\n    likes: this.props.userInfo.likes,\n    poster: this.props.userInfo.poster,\n    poster_name: this.props.userInfo.poster_name,\n    id: this.props.userInfo.id,\n    created_at: this.props.userInfo.created_at,\n    updated_at: this.props.userInfo.updated_at\n  }\n\n  handleFieldChange = (comment) => {\n    this.setState({\n      [comment.target.name]: comment.target.value\n    })\n  }\n\n  createEdit = () => {\n    this.props.storeEdit(this.state)\n  }\n\n  handleKeypress = (e) => {\n    if (e.keyCode === 13) {\n      this.createEdit()\n    }\n  };\n\n\n  render() {\n    return (\n      <div className=\"container edits\">\n        <div className=\"card my-3 edits\">\n          <div className=\"card-body edits\">\n            <div className=\"cf edits\">\n              <img src={profile} alt=\"pic\" className=\"pic\"/>\n              <h2 className=\"card-title\">{this.props.userInfo.poster_name}</h2>\n              <img src={editing} alt={\"\"} className=\"edit-wheel\"/>\n              <h5>Editing</h5>\n              <textarea className=\"edit-box\" name=\"body\" onKeyDown={this.handleKeypress} onChange={this.handleFieldChange}>{this.props.userInfo.body}</textarea>\n              <button onClick={this.createEdit} className=\"btn btn-success float-right\">Update Comment</button>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EditComment\n","import React, {Component} from 'react';\nimport './index.css'\nimport profile from \"./profile.png\";\nimport EditComment from \"./EditComment\";\nimport ApiService from \"./apiService\";\n\n\n\nclass Replies extends Component {\n\n  state = {\n    showEditForm: false\n  }\n\n  constructor(props) {\n    super(props);\n    this.apiService = new ApiService();\n  }\n\n  toggleShowEditForm = () => {\n    this.setState({\n      showEditForm: !this.state.showEditForm\n    });\n  };\n\n  storeEdit= (data) => {\n    this.apiService.updateComment(data).then(() => {\n      this.props.fetchReplies()\n      this.toggleShowEditForm()\n    })\n\n  }\n\n  render() {\n    return (\n    <div className=\"container\">\n      <div className=\"card my-34\">\n        <div className=\"card-body\">\n          <div className=\"cf\">\n            <img src={profile} alt=\"pic\" className=\"pic\"/>\n            <h2 className=\"card-title\">{this.props.r.poster_name}</h2>\n          </div>\n          <h4 className=\"card-title\">{this.props.r.body}</h4>\n          <button className=\"btn-info\" style={{fontSize: '18px'}}\n                  onClick={() => this.props.addLike(this.props.r.id)}>Likes: {this.props.r.likes}</button>\n          <button className=\"btn btn-danger float-right btn-sm\" style={{fontSize: '18px'}}\n                  onClick={() => this.props.deleteReplies(this.props.r.id)}>Delete\n          </button>\n          <button className={`btn ${this.state.showEditForm ? 'btn-danger three' : 'btn-primary'}`} onClick={this.toggleShowEditForm}>\n            {this.state.showEditForm ? 'Cancel' : 'Edit'}\n          </button>\n        </div>\n      </div>\n      {this.state.showEditForm && <EditComment userInfo={this.props.r} storeEdit={this.storeEdit}/>}\n    </div>\n    )\n  }\n}\nexport default Replies\n","import React, {Component} from 'react';\nimport './index.css'\nimport profile from './profile.png';\nimport AddReply from \"./AddReply\";\nimport ApiService from \"./apiService\";\nimport Replies from \"./Replies\";\nimport EditComment from \"./EditComment\"\n\nclass Comment extends Component {\n\n  state = {\n\n    replies: [],\n    //r is sorted replies... I think\n    r: [],\n    showReplyForm: false,\n    showEditForm: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.apiService = new ApiService();\n  }\n\n  fetchReplies = () =>\n    this.apiService.getComments().then(({ data }) => {\n      this.setState({\n        replies: data.comments\n      });\n      this.findReplies()\n    });\n\n  componentWillMount() {\n    this.fetchReplies();\n  }\n\n  storeReply = (data) => {\n    this.apiService.storeComment(data).then(() => {\n      this.fetchReplies()\n      this.toggleShowReplyForm()\n    })\n  }\n\n  storeEdit= (data) => {\n    this.apiService.updateComment(data).then(() => {\n      this.props.fetchComments()\n      this.toggleShowEditForm()\n    })\n\n  }\n\n  toggleShowReplyForm = () => {\n    this.setState({\n      showReplyForm: !this.state.showReplyForm\n    });\n  };\n\n  toggleShowEditForm = () => {\n    this.setState({\n      showEditForm: !this.state.showEditForm\n    });\n  };\n\n  findReplies = () => {\n\n    var rep = []\n\n    for(let i=0; i < this.state.replies.length; i++)\n    {\n      if(this.state.replies[i].parent_id !== null)\n      {\n        if(this.props.refinedComments.comment_id === this.state.replies[i].parent_id){\n\n          rep.push(this.state.replies[i]);\n        }\n      }\n    }\n    this.setState({r:rep})\n  }\n\n  deleteReplies = (comment_id) => {\n    this.apiService.deleteComment(comment_id)\n      .then(() => {\n        this.fetchReplies()\n      })\n  }\n\n  addLike = (comment_id) => {\n    this.apiService.addLike(comment_id)\n      .then(() => {\n        this.fetchReplies()\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n      <div className=\"card my-3\">\n        <div className=\"card-body small\">\n          <div className=\"cf\">\n            <img src={profile} alt=\"pic\" className=\"pic\"/>\n            <h2 className=\"card-title\">{this.props.refinedComments.poster_name}</h2>\n          </div>\n          <h4 className=\"card-title\">{this.props.refinedComments.body}</h4>\n          <button\n            className={`btn ${this.state.showReplyForm ? 'btn-danger two' : 'btn-warning'}`}\n            onClick={this.toggleShowReplyForm}>\n            {this.state.showReplyForm ? 'Cancel' : 'Reply'}\n          </button>\n          <button className=\"btn-info float-left btn-sm\" style={{fontSize: '18px'}}\n                  onClick={() => this.props.addLike(this.props.refinedComments.id)}>Likes: {this.props.refinedComments.likes}</button>\n          <button className=\"btn btn-danger float-right btn-sm\" style={{fontSize: '18px'}}\n                  onClick={() => this.props.deleteComment(this.props.refinedComments.id)}>Delete\n          </button>\n          <button className={`btn ${this.state.showEditForm ? 'btn-danger three' : 'btn-primary'}`} onClick={this.toggleShowEditForm}>\n            {this.state.showEditForm ? 'Cancel' : 'Edit'}\n          </button>\n        </div>\n      </div>\n        {this.state.showEditForm && <EditComment userInfo={this.props.refinedComments} storeEdit={this.storeEdit}/>}\n        {this.state.showReplyForm && <AddReply storeReply={this.storeReply}  parentCommentId={this.props.refinedComments.comment_id}/>}\n        {this.state.r.map((r) => <Replies deleteReplies={this.deleteReplies} fetchReplies={this.fetchReplies} addLike={this.addLike} r={r} key={r.comment_id}/>)}\n      </div>\n    )\n  }\n}\nexport default Comment\n","import React, { Component } from 'react'\n\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css'\n\nclass AddComment extends Component {\n\n  state = {\n    //Hard coded so there will always be something in that field\n    body: '*Poster did not add a body* (Shame them). This is also my cop out for form validation for now, you caught me.',\n    //hard coding post id because there's only one post\n    post_id: '9ba7b1d5-94e0-41bd-a380-e2f953ffe58c',\n    comment_id: uuidv4(),\n    parent_id: '',\n    likes: 0,\n    poster: uuidv4(),\n    poster_name: '*Gasp* the poster did not specify their name',\n    id: '',\n    created_at: '',\n    updated_at: ''\n  }\n\n\n  handleFieldChange = (comment) => {\n    this.setState({\n      [comment.target.name]: comment.target.value\n    })\n  }\n\n  createComment = () => {\n    this.props.storeComment(this.state)\n  }\n\n   handleKeypress = (e) => {\n    if (e.keyCode === 13) {\n      this.createComment()\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3\">\n            <h4 className=\"text-center mb-5\">Add new Comment</h4>\n            <div className=\"form-group\">\n              <label>\n                <input name=\"poster_name\" onChange={this.handleFieldChange} type=\"text\" className=\"form-control\" placeholder=\"Name\" />\n              </label>\n              <textarea name=\"body\" onChange={this.handleFieldChange} type=\"text\" className=\"form-control body\" placeholder=\"Body\" />\n            </div>\n            <div className=\"form-group text-center\">\n              <button onClick={this.createComment} className=\"btn btn-success\">Post Comment</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddComment\n","import React, { Component } from 'react';\nimport './index.css'\nimport ReactPlayer from \"react-player\";\n\nimport Comment from './Comment';\nimport AddComment from './AddComment';\nimport ApiService from './apiService';\n\nclass App extends Component {\n\tstate = {\n\t\tcomments: [],\n    refinedComments: [],\n\t\tshowCreateCommentForm: false\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.apiService = new ApiService();\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.fetchComments();\n\n\t}\n\n  refineComments = (comments) => {\n\n    var c = []\n\n\t  for(let i=0; i < comments.length; i++)\n    {\n      if(comments[i].parent_id === null)\n      {\n        c.push(comments[i])\n      }\n    }\n\n\t  this.setState({refinedComments: c})\n\n  }\n\n\tfetchComments = () =>\n\t\tthis.apiService.getComments().then(({ data }) => {\n\t\t\tthis.setState({\n        comments: data.comments\n\t\t\t});\n      this.refineComments(this.state.comments)\n    });\n\n  storeComment = (data) => {\n    this.apiService.storeComment(data)\n      .then(() => {\n        this.fetchComments()\n        this.toggleShowCreateCommentForm()\n      })\n  }\n\n  deleteComment = (comment_id) => {\n    this.apiService.deleteComment(comment_id)\n      .then(() => {\n        this.fetchComments()\n      })\n  }\n\n  addLike = (comment_id) => {\n    this.apiService.addLike(comment_id)\n      .then(() => {\n        this.fetchComments()\n      })\n  }\n\n\n\ttoggleShowCreateCommentForm = () => {\n\t\tthis.setState({\n\t\t\tshowCreateCommentForm: !this.state.showCreateCommentForm\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n        <br/>\n        \t<ReactPlayer className={\"vid\"} url=\"https://www.youtube.com/watch?v=EL-D9LrFJd4\"/>\n        <br/>\n\t\t\t\t<div className=\"text-center mb-5\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={`btn ${this.state.showCreateCommentForm ? 'btn-danger' : 'btn-info'}`}\n\t\t\t\t\t\tonClick={this.toggleShowCreateCommentForm}>\n\t\t\t\t\t\t{this.state.showCreateCommentForm ? 'Cancel' : 'Add Comment'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t{this.state.showCreateCommentForm && <AddComment storeComment={this.storeComment} users={this.state.users} />}\n\t\t\t\t{this.state.refinedComments.map((refinedComments) => <Comment deleteComment={this.deleteComment} addLike={this.addLike} refinedComments={refinedComments} fetchComments={this.fetchComments} key={refinedComments.comment_id}/>)}\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}