{"ast":null,"code":"import _classCallCheck from \"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\saylo\\\\Documents\\\\GitHub\\\\ESOF432\\\\comment-frontend\\\\src\\\\AddComment.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AddComment = /*#__PURE__*/function (_Component) {\n  _inherits(AddComment, _Component);\n\n  var _super = _createSuper(AddComment);\n\n  function AddComment() {\n    var _this;\n\n    _classCallCheck(this, AddComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      //Hard coded so there will always be something in that field\n      body: '',\n      //hard coding post id because there's only one post\n      post_id: '9ba7b1d5-94e0-41bd-a380-e2f953ffe58c',\n      comment_id: uuidv4(),\n      parent_id: '',\n      likes: 0,\n      poster: uuidv4(),\n      poster_name: '',\n      id: '',\n      created_at: '',\n      updated_at: '',\n      errors: {\n        name: '',\n        body: ''\n      }\n    };\n\n    _this.handleFieldChange = function (comment) {\n      comment.preventDefault();\n      var _comment$target = comment.target,\n          name = _comment$target.name,\n          value = _comment$target.value;\n      var errors = _this.state.errors;\n      alert(value);\n\n      switch (name) {\n        case 'poster_name':\n          errors.name = value.length < 5 ? \"Your name has to be at least one character :)\" : '';\n          break;\n\n        case 'body':\n          errors.body = value.length < 5 ? '' : 'Please enter something :)';\n          break;\n\n        default:\n          break;\n      }\n\n      _this.setState({\n        [comment.target.name]: comment.target.value\n      });\n    };\n\n    _this.createComment = function (comment) {\n      comment.preventDefault();\n\n      if (_this.validateForm(_this.state.errors)) {\n        console.info('Valid Form');\n\n        _this.props.storeComment(_this.state);\n      } else {\n        console.error('Invalid Form');\n      }\n    };\n\n    _this.validateForm = function (errors) {\n      var valid = true;\n      Object.values(errors).forEach(function (val) {\n        return val.length > 0 && (valid = false);\n      });\n      return valid;\n    };\n\n    _this.handleKeypress = function (e) {\n      if (e.keyCode === 13) {\n        _this.createComment();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddComment, [{\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 offset-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-center mb-5\",\n              children: \"Add new Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"poster_name\",\n                  onChange: this.handleFieldChange,\n                  type: \"text\",\n                  className: \"form-control\",\n                  placeholder: \"Name\",\n                  noValidate: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 17\n                }, this), errors.name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error\",\n                  children: errors.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"body\",\n                onChange: this.handleFieldChange,\n                type: \"text\",\n                className: \"form-control body\",\n                placeholder: \"Body\",\n                noValidate: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this), errors.body.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error\",\n                children: errors.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.createComment,\n                className: \"btn btn-success\",\n                children: \"Post Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return AddComment;\n}(Component);\n\nexport default AddComment;","map":{"version":3,"sources":["C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/src/AddComment.js"],"names":["React","Component","v4","uuidv4","AddComment","state","body","post_id","comment_id","parent_id","likes","poster","poster_name","id","created_at","updated_at","errors","name","handleFieldChange","comment","preventDefault","target","value","alert","length","setState","createComment","validateForm","console","info","props","storeComment","error","valid","Object","values","forEach","val","handleKeypress","e","keyCode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css'\n\nclass AddComment extends Component {\n\n  state = {\n    //Hard coded so there will always be something in that field\n    body: '',\n    //hard coding post id because there's only one post\n    post_id: '9ba7b1d5-94e0-41bd-a380-e2f953ffe58c',\n    comment_id: uuidv4(),\n    parent_id: '',\n    likes: 0,\n    poster: uuidv4(),\n    poster_name: '',\n    id: '',\n    created_at: '',\n    updated_at: '',\n\n    errors:{\n      name: '',\n      body: '',\n    }\n  }\n\n\n  handleFieldChange = (comment) => {\n\n    comment.preventDefault();\n\n    const { name, value } = comment.target;\n\n    let errors = this.state.errors;\n\n    alert(value)\n\n    switch (name) {\n      case 'poster_name':\n        errors.name =\n            value.length < 5\n                ? \"Your name has to be at least one character :)\"\n                : '';\n        break;\n      case 'body':\n        errors.body =\n            value.length < 5\n                ? ''\n                : 'Please enter something :)';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      [comment.target.name]: comment.target.value\n    })\n  }\n\n  createComment = (comment) => {\n    comment.preventDefault()\n    if(this.validateForm(this.state.errors)) {\n      console.info('Valid Form')\n      this.props.storeComment(this.state)\n    }else{\n      console.error('Invalid Form')\n    }\n\n  }\n\n validateForm = (errors) => {\n    let valid = true;\n    Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n    return valid;\n  }\n\n   handleKeypress = (e) => {\n    if (e.keyCode === 13) {\n      this.createComment()\n    }\n  };\n\n  render() {\n    const {errors} = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3\">\n            <h4 className=\"text-center mb-5\">Add new Comment</h4>\n            <div className=\"form-group\">\n              <label>\n                <input name=\"poster_name\" onChange={this.handleFieldChange} type=\"text\" className=\"form-control\" placeholder=\"Name\" noValidate />\n                {errors.name.length > 0 &&\n                <span className='error'>{errors.name}</span>}\n              </label>\n              <textarea name=\"body\" onChange={this.handleFieldChange} type=\"text\" className=\"form-control body\" placeholder=\"Body\" noValidate />\n              {errors.body.length > 0 &&\n              <span className='error'>{errors.body}</span>}\n            </div>\n            <div className=\"form-group text-center\">\n              <button onClick={this.createComment} className=\"btn btn-success\">Post Comment</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddComment\n"]},"metadata":{},"sourceType":"module"}