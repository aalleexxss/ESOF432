{"ast":null,"code":"import _classCallCheck from \"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\saylo\\\\Documents\\\\GitHub\\\\ESOF432\\\\comment-frontend\\\\src\\\\AddComment.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AddComment = /*#__PURE__*/function (_Component) {\n  _inherits(AddComment, _Component);\n\n  var _super = _createSuper(AddComment);\n\n  function AddComment() {\n    var _this;\n\n    _classCallCheck(this, AddComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      //Hard coded so there will always be something in that field\n      body: '',\n      //hard coding post id because there's only one post\n      post_id: '9ba7b1d5-94e0-41bd-a380-e2f953ffe58c',\n      comment_id: uuidv4(),\n      parent_id: '',\n      likes: 0,\n      poster: uuidv4(),\n      poster_name: '',\n      id: '',\n      created_at: '',\n      updated_at: '',\n      errors: {}\n    };\n\n    _this.handleFieldChange = function (comment) {\n      _this.setState({\n        [comment.target.name]: comment.target.value\n      });\n    };\n\n    _this.createComment = function () {\n      if (_this.handleValidation()) {\n        alert(\"Form submitted\"); //this.props.storeComment(this.state)\n      } else {//alert(\"Form has errors.\")\n        }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddComment, [{\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var poster_name = this.state.poster_name;\n      var body = this.state.body;\n      var errors = {};\n      var formIsValid = true; //Name\n\n      if (poster_name === \"\") {\n        formIsValid = false;\n        errors[\"poster_name\"] = \"Cannot be empty\";\n      } //Email\n\n\n      if (body === \"\") {\n        formIsValid = false;\n        errors[\"body\"] = \"Cannot be empty\";\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 offset-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-center mb-5\",\n              children: \"Add new Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.createComment,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"poster_name\",\n                    onChange: this.handleFieldChange,\n                    type: \"text\",\n                    className: \"form-control\",\n                    placeholder: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error\",\n                    children: this.state.errors[\"poster_name\"]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"body\",\n                  onChange: this.handleFieldChange,\n                  type: \"text\",\n                  className: \"form-control body\",\n                  placeholder: \"Body\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error\",\n                  children: this.state.errors[\"body\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  id: \"submit\",\n                  value: \"submit\",\n                  children: \"Post Comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return AddComment;\n}(Component);\n\nexport default AddComment;","map":{"version":3,"sources":["C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/src/AddComment.js"],"names":["React","Component","v4","uuidv4","AddComment","state","body","post_id","comment_id","parent_id","likes","poster","poster_name","id","created_at","updated_at","errors","handleFieldChange","comment","setState","target","name","value","createComment","handleValidation","alert","formIsValid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css'\n\nclass AddComment extends Component {\n\n  state = {\n    //Hard coded so there will always be something in that field\n    body: '',\n    //hard coding post id because there's only one post\n    post_id: '9ba7b1d5-94e0-41bd-a380-e2f953ffe58c',\n    comment_id: uuidv4(),\n    parent_id: '',\n    likes: 0,\n    poster: uuidv4(),\n    poster_name: '',\n    id: '',\n    created_at: '',\n    updated_at: '',\n    errors: {}\n  }\n\n\n  handleFieldChange = (comment) => {\n    this.setState({\n      [comment.target.name]: comment.target.value\n    })\n  }\n\n  handleValidation(){\n    let poster_name = this.state.poster_name;\n    let body = this.state.body;\n    let errors = {};\n    let formIsValid = true;\n\n    //Name\n    if(poster_name === \"\"){\n      formIsValid = false;\n      errors[\"poster_name\"] = \"Cannot be empty\";\n    }\n\n    //Email\n    if(body === \"\"){\n      formIsValid = false;\n      errors[\"body\"] = \"Cannot be empty\";\n    }\n    this.setState({errors: errors});\n    return formIsValid;\n  }\n\n  createComment = () => {\n    if(this.handleValidation()){\n      alert(\"Form submitted\");\n      //this.props.storeComment(this.state)\n    }else{\n      //alert(\"Form has errors.\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3\">\n            <h4 className=\"text-center mb-5\">Add new Comment</h4>\n            <form onSubmit={this.createComment}>\n            <div className=\"form-group\">\n              <label>\n                <input name=\"poster_name\" onChange={this.handleFieldChange} type=\"text\" className=\"form-control\" placeholder=\"Name\"/>\n                <span className=\"error\">{this.state.errors[\"poster_name\"]}</span>\n              </label>\n              <textarea name=\"body\" onChange={this.handleFieldChange} type=\"text\" className=\"form-control body\" placeholder=\"Body\"/>\n              <span className=\"error\">{this.state.errors[\"body\"]}</span>\n            </div>\n            <div className=\"submit\">\n              <button className=\"btn btn-success\" id={\"submit\"} value={\"submit\"}>Post Comment</button>\n            </div>\n          </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddComment\n"]},"metadata":{},"sourceType":"module"}