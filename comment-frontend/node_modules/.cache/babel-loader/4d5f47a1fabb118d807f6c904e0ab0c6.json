{"ast":null,"code":"// =========\n// = humps =\n// =========\n// Underscore-to-camelCase converter (and vice versa)\n// for strings and object keys\n// humps is copyright © 2012+ Dom Christie\n// Released under the MIT license.\n;\n\n(function (global) {\n  var _processKeys = function _processKeys(convert, obj, options) {\n    if (!_isObject(obj) || _isDate(obj) || _isRegExp(obj) || _isBoolean(obj) || _isFunction(obj)) {\n      return obj;\n    }\n\n    var output,\n        i = 0,\n        l = 0;\n\n    if (_isArray(obj)) {\n      output = [];\n\n      for (l = obj.length; i < l; i++) {\n        output.push(_processKeys(convert, obj[i], options));\n      }\n    } else {\n      output = {};\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          output[convert(key, options)] = _processKeys(convert, obj[key], options);\n        }\n      }\n    }\n\n    return output;\n  }; // String conversion methods\n\n\n  var separateWords = function separateWords(string, options) {\n    options = options || {};\n    var separator = options.separator || '_';\n    var split = options.split || /(?=[A-Z])/;\n    return string.split(split).join(separator);\n  };\n\n  var camelize = function camelize(string) {\n    if (_isNumerical(string)) {\n      return string;\n    }\n\n    string = string.replace(/[\\-_\\s]+(.)?/g, function (match, chr) {\n      return chr ? chr.toUpperCase() : '';\n    }); // Ensure 1st char is always lowercase\n\n    return string.substr(0, 1).toLowerCase() + string.substr(1);\n  };\n\n  var pascalize = function pascalize(string) {\n    var camelized = camelize(string); // Ensure 1st char is always uppercase\n\n    return camelized.substr(0, 1).toUpperCase() + camelized.substr(1);\n  };\n\n  var decamelize = function decamelize(string, options) {\n    return separateWords(string, options).toLowerCase();\n  }; // Utilities\n  // Taken from Underscore.js\n\n\n  var toString = Object.prototype.toString;\n\n  var _isFunction = function _isFunction(obj) {\n    return typeof obj === 'function';\n  };\n\n  var _isObject = function _isObject(obj) {\n    return obj === Object(obj);\n  };\n\n  var _isArray = function _isArray(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  var _isDate = function _isDate(obj) {\n    return toString.call(obj) == '[object Date]';\n  };\n\n  var _isRegExp = function _isRegExp(obj) {\n    return toString.call(obj) == '[object RegExp]';\n  };\n\n  var _isBoolean = function _isBoolean(obj) {\n    return toString.call(obj) == '[object Boolean]';\n  }; // Performant way to determine if obj coerces to a number\n\n\n  var _isNumerical = function _isNumerical(obj) {\n    obj = obj - 0;\n    return obj === obj;\n  }; // Sets up function which handles processing keys\n  // allowing the convert function to be modified by a callback\n\n\n  var _processor = function _processor(convert, options) {\n    var callback = options && 'process' in options ? options.process : options;\n\n    if (typeof callback !== 'function') {\n      return convert;\n    }\n\n    return function (string, options) {\n      return callback(string, convert, options);\n    };\n  };\n\n  var humps = {\n    camelize: camelize,\n    decamelize: decamelize,\n    pascalize: pascalize,\n    depascalize: decamelize,\n    camelizeKeys: function camelizeKeys(object, options) {\n      return _processKeys(_processor(camelize, options), object);\n    },\n    decamelizeKeys: function decamelizeKeys(object, options) {\n      return _processKeys(_processor(decamelize, options), object, options);\n    },\n    pascalizeKeys: function pascalizeKeys(object, options) {\n      return _processKeys(_processor(pascalize, options), object);\n    },\n    depascalizeKeys: function depascalizeKeys() {\n      return this.decamelizeKeys.apply(this, arguments);\n    }\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    define(humps);\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = humps;\n  } else {\n    global.humps = humps;\n  }\n})(this);","map":{"version":3,"sources":["C:/Users/saylo/Documents/GitHub/ESOF432/423commentapi/comment-frontend/node_modules/humps/humps.js"],"names":["global","_processKeys","convert","obj","options","_isObject","_isDate","_isRegExp","_isBoolean","_isFunction","output","i","l","_isArray","length","push","key","Object","prototype","hasOwnProperty","call","separateWords","string","separator","split","join","camelize","_isNumerical","replace","match","chr","toUpperCase","substr","toLowerCase","pascalize","camelized","decamelize","toString","_processor","callback","process","humps","depascalize","camelizeKeys","object","decamelizeKeys","pascalizeKeys","depascalizeKeys","apply","arguments","define","amd","module","exports"],"mappings":"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","sourcesContent":["// =========\n// = humps =\n// =========\n// Underscore-to-camelCase converter (and vice versa)\n// for strings and object keys\n\n// humps is copyright © 2012+ Dom Christie\n// Released under the MIT license.\n\n\n;(function(global) {\n\n  var _processKeys = function(convert, obj, options) {\n    if(!_isObject(obj) || _isDate(obj) || _isRegExp(obj) || _isBoolean(obj) || _isFunction(obj)) {\n      return obj;\n    }\n\n    var output,\n        i = 0,\n        l = 0;\n\n    if(_isArray(obj)) {\n      output = [];\n      for(l=obj.length; i<l; i++) {\n        output.push(_processKeys(convert, obj[i], options));\n      }\n    }\n    else {\n      output = {};\n      for(var key in obj) {\n        if(Object.prototype.hasOwnProperty.call(obj, key)) {\n          output[convert(key, options)] = _processKeys(convert, obj[key], options);\n        }\n      }\n    }\n    return output;\n  };\n\n  // String conversion methods\n\n  var separateWords = function(string, options) {\n    options = options || {};\n    var separator = options.separator || '_';\n    var split = options.split || /(?=[A-Z])/;\n\n    return string.split(split).join(separator);\n  };\n\n  var camelize = function(string) {\n    if (_isNumerical(string)) {\n      return string;\n    }\n    string = string.replace(/[\\-_\\s]+(.)?/g, function(match, chr) {\n      return chr ? chr.toUpperCase() : '';\n    });\n    // Ensure 1st char is always lowercase\n    return string.substr(0, 1).toLowerCase() + string.substr(1);\n  };\n\n  var pascalize = function(string) {\n    var camelized = camelize(string);\n    // Ensure 1st char is always uppercase\n    return camelized.substr(0, 1).toUpperCase() + camelized.substr(1);\n  };\n\n  var decamelize = function(string, options) {\n    return separateWords(string, options).toLowerCase();\n  };\n\n  // Utilities\n  // Taken from Underscore.js\n\n  var toString = Object.prototype.toString;\n\n  var _isFunction = function(obj) {\n    return typeof(obj) === 'function';\n  };\n  var _isObject = function(obj) {\n    return obj === Object(obj);\n  };\n  var _isArray = function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n  var _isDate = function(obj) {\n    return toString.call(obj) == '[object Date]';\n  };\n  var _isRegExp = function(obj) {\n    return toString.call(obj) == '[object RegExp]';\n  };\n  var _isBoolean = function(obj) {\n    return toString.call(obj) == '[object Boolean]';\n  };\n\n  // Performant way to determine if obj coerces to a number\n  var _isNumerical = function(obj) {\n    obj = obj - 0;\n    return obj === obj;\n  };\n\n  // Sets up function which handles processing keys\n  // allowing the convert function to be modified by a callback\n  var _processor = function(convert, options) {\n    var callback = options && 'process' in options ? options.process : options;\n\n    if(typeof(callback) !== 'function') {\n      return convert;\n    }\n\n    return function(string, options) {\n      return callback(string, convert, options);\n    }\n  };\n\n  var humps = {\n    camelize: camelize,\n    decamelize: decamelize,\n    pascalize: pascalize,\n    depascalize: decamelize,\n    camelizeKeys: function(object, options) {\n      return _processKeys(_processor(camelize, options), object);\n    },\n    decamelizeKeys: function(object, options) {\n      return _processKeys(_processor(decamelize, options), object, options);\n    },\n    pascalizeKeys: function(object, options) {\n      return _processKeys(_processor(pascalize, options), object);\n    },\n    depascalizeKeys: function () {\n      return this.decamelizeKeys.apply(this, arguments);\n    }\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    define(humps);\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = humps;\n  } else {\n    global.humps = humps;\n  }\n\n})(this);\n"]},"metadata":{},"sourceType":"script"}