{"ast":null,"code":"import _classCallCheck from\"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{v4 as uuidv4}from'uuid';import'./index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddComment=/*#__PURE__*/function(_Component){_inherits(AddComment,_Component);var _super=_createSuper(AddComment);function AddComment(){var _this;_classCallCheck(this,AddComment);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={//Hard coded so there will always be something in that field\nbody:'*Poster did not add a body* (Shame them). This is also my cop out for form validation for now, you caught me.',//hard coding post id because there's only one post\npost_id:'9ba7b1d5-94e0-41bd-a380-e2f953ffe58c',comment_id:uuidv4(),parent_id:'',likes:0,poster:uuidv4(),poster_name:'*Gasp* the poster did not specify their name',id:'',created_at:'',updated_at:''};_this.handleFieldChange=function(comment){_this.setState({[comment.target.name]:comment.target.value});};_this.createComment=function(){_this.props.storeComment(_this.state);};_this.handleKeypress=function(e){if(e.keyCode===13){_this.createComment();}};return _this;}_createClass(AddComment,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6 offset-md-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-center mb-5\",children:\"Add new Comment\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(\"input\",{name:\"poster_name\",onChange:this.handleFieldChange,type:\"text\",className:\"form-control\",placeholder:\"Name\"})}),/*#__PURE__*/_jsx(\"textarea\",{name:\"body\",onChange:this.handleFieldChange,type:\"text\",className:\"form-control body\",placeholder:\"Body\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group text-center\",children:/*#__PURE__*/_jsx(\"button\",{onClick:this.createComment,className:\"btn btn-success\",children:\"Post Comment\"})})]})})});}}]);return AddComment;}(Component);export default AddComment;","map":{"version":3,"sources":["C:/Users/saylo/Documents/GitHub/ESOF432/comment-frontend/src/AddComment.js"],"names":["React","Component","v4","uuidv4","AddComment","state","body","post_id","comment_id","parent_id","likes","poster","poster_name","id","created_at","updated_at","handleFieldChange","comment","setState","target","name","value","createComment","props","storeComment","handleKeypress","e","keyCode"],"mappings":"4hBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,CACA,MAAO,aAAP,C,2FAEMC,CAAAA,U,2UAEJC,K,CAAQ,CACN;AACAC,IAAI,CAAE,+GAFA,CAGN;AACAC,OAAO,CAAE,sCAJH,CAKNC,UAAU,CAAEL,MAAM,EALZ,CAMNM,SAAS,CAAE,EANL,CAONC,KAAK,CAAE,CAPD,CAQNC,MAAM,CAAER,MAAM,EARR,CASNS,WAAW,CAAE,8CATP,CAUNC,EAAE,CAAE,EAVE,CAWNC,UAAU,CAAE,EAXN,CAYNC,UAAU,CAAE,EAZN,C,OAgBRC,iB,CAAoB,SAACC,OAAD,CAAa,CAC/B,MAAKC,QAAL,CAAc,CACZ,CAACD,OAAO,CAACE,MAAR,CAAeC,IAAhB,EAAuBH,OAAO,CAACE,MAAR,CAAeE,KAD1B,CAAd,EAGD,C,OAEDC,a,CAAgB,UAAM,CACpB,MAAKC,KAAL,CAAWC,YAAX,CAAwB,MAAKnB,KAA7B,EACD,C,OAEAoB,c,CAAiB,SAACC,CAAD,CAAO,CACvB,GAAIA,CAAC,CAACC,OAAF,GAAc,EAAlB,CAAsB,CACpB,MAAKL,aAAL,GACD,CACF,C,4DAED,iBAAS,CACP,mBACE,YAAK,SAAS,CAAC,WAAf,uBACE,YAAK,SAAS,CAAC,KAAf,uBACE,aAAK,SAAS,CAAC,sBAAf,wBACE,WAAI,SAAS,CAAC,kBAAd,6BADF,cAEE,aAAK,SAAS,CAAC,YAAf,wBACE,oCACE,cAAO,IAAI,CAAC,aAAZ,CAA0B,QAAQ,CAAE,KAAKN,iBAAzC,CAA4D,IAAI,CAAC,MAAjE,CAAwE,SAAS,CAAC,cAAlF,CAAiG,WAAW,CAAC,MAA7G,EADF,EADF,cAIE,iBAAU,IAAI,CAAC,MAAf,CAAsB,QAAQ,CAAE,KAAKA,iBAArC,CAAwD,IAAI,CAAC,MAA7D,CAAoE,SAAS,CAAC,mBAA9E,CAAkG,WAAW,CAAC,MAA9G,EAJF,GAFF,cAQE,YAAK,SAAS,CAAC,wBAAf,uBACE,eAAQ,OAAO,CAAE,KAAKM,aAAtB,CAAqC,SAAS,CAAC,iBAA/C,0BADF,EARF,GADF,EADF,EADF,CAkBD,C,wBArDsBrB,S,EAwDzB,cAAeG,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css'\n\nclass AddComment extends Component {\n\n  state = {\n    //Hard coded so there will always be something in that field\n    body: '*Poster did not add a body* (Shame them). This is also my cop out for form validation for now, you caught me.',\n    //hard coding post id because there's only one post\n    post_id: '9ba7b1d5-94e0-41bd-a380-e2f953ffe58c',\n    comment_id: uuidv4(),\n    parent_id: '',\n    likes: 0,\n    poster: uuidv4(),\n    poster_name: '*Gasp* the poster did not specify their name',\n    id: '',\n    created_at: '',\n    updated_at: ''\n  }\n\n\n  handleFieldChange = (comment) => {\n    this.setState({\n      [comment.target.name]: comment.target.value\n    })\n  }\n\n  createComment = () => {\n    this.props.storeComment(this.state)\n  }\n\n   handleKeypress = (e) => {\n    if (e.keyCode === 13) {\n      this.createComment()\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3\">\n            <h4 className=\"text-center mb-5\">Add new Comment</h4>\n            <div className=\"form-group\">\n              <label>\n                <input name=\"poster_name\" onChange={this.handleFieldChange} type=\"text\" className=\"form-control\" placeholder=\"Name\" />\n              </label>\n              <textarea name=\"body\" onChange={this.handleFieldChange} type=\"text\" className=\"form-control body\" placeholder=\"Body\" />\n            </div>\n            <div className=\"form-group text-center\">\n              <button onClick={this.createComment} className=\"btn btn-success\">Post Comment</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddComment\n"]},"metadata":{},"sourceType":"module"}