{"ast":null,"code":"import _classCallCheck from \"C:/Users/Alex/Documents/2021-spring/Esof/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Alex/Documents/2021-spring/Esof/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/Alex/Documents/2021-spring/Esof/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Alex/Documents/2021-spring/Esof/ESOF432/comment-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\2021-spring\\\\Esof\\\\ESOF432\\\\comment-frontend\\\\src\\\\AddComment.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AddComment = /*#__PURE__*/function (_Component) {\n  _inherits(AddComment, _Component);\n\n  var _super = _createSuper(AddComment);\n\n  function AddComment() {\n    var _this;\n\n    _classCallCheck(this, AddComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      body: '',\n      //hard coding post id because there's only one post\n      post_id: '9ba7b1d5-94e0-41bd-a380-e2f953ffe58c',\n      comment_id: uuidv4(),\n      parent_id: '',\n      likes: 0,\n      poster: uuidv4(),\n      poster_name: '',\n      id: '',\n      created_at: '',\n      updated_at: '',\n      errors: {}\n    };\n\n    _this.handleFieldChange = function (comment) {\n      _this.setState({\n        [comment.target.name]: comment.target.value\n      });\n    };\n\n    _this.createComment = function () {\n      if (_this.handleValidation()) {\n        _this.props.storeComment(_this.state);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddComment, [{\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var poster_name = this.state.poster_name;\n      var body = this.state.body;\n      var errors = {};\n      var formIsValid = true;\n\n      if (poster_name === \"\") {\n        formIsValid = false;\n        errors[\"poster_name\"] = \"Cannot be empty\";\n      }\n\n      if (body === \"\") {\n        formIsValid = false;\n        errors[\"body\"] = \"Cannot be empty\";\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 offset-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-center mb-5\",\n              children: \"Add new Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"poster_name\",\n                  onChange: this.handleFieldChange,\n                  type: \"text\",\n                  className: \"form-control\",\n                  placeholder: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error\",\n                  children: this.state.errors[\"poster_name\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"body\",\n                onChange: this.handleFieldChange,\n                type: \"text\",\n                className: \"form-control body\",\n                placeholder: \"Body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error\",\n                children: this.state.errors[\"body\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              style: {\n                float: \"right\"\n              },\n              onClick: this.createComment,\n              children: \"Post Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return AddComment;\n}(Component);\n\nexport default AddComment;","map":{"version":3,"sources":["C:/Users/Alex/Documents/2021-spring/Esof/ESOF432/comment-frontend/src/AddComment.js"],"names":["React","Component","v4","uuidv4","AddComment","state","body","post_id","comment_id","parent_id","likes","poster","poster_name","id","created_at","updated_at","errors","handleFieldChange","comment","setState","target","name","value","createComment","handleValidation","props","storeComment","formIsValid","float"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAO,aAAP;;;IAEMC,U;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAEN;AACAC,MAAAA,OAAO,EAAE,sCAHH;AAINC,MAAAA,UAAU,EAAEL,MAAM,EAJZ;AAKNM,MAAAA,SAAS,EAAE,EALL;AAMNC,MAAAA,KAAK,EAAE,CAND;AAONC,MAAAA,MAAM,EAAER,MAAM,EAPR;AAQNS,MAAAA,WAAW,EAAE,EARP;AASNC,MAAAA,EAAE,EAAE,EATE;AAUNC,MAAAA,UAAU,EAAE,EAVN;AAWNC,MAAAA,UAAU,EAAE,EAXN;AAYNC,MAAAA,MAAM,EAAE;AAZF,K;;UAgBRC,iB,GAAoB,UAACC,OAAD,EAAa;AAC/B,YAAKC,QAAL,CAAc;AACZ,SAACD,OAAO,CAACE,MAAR,CAAeC,IAAhB,GAAuBH,OAAO,CAACE,MAAR,CAAeE;AAD1B,OAAd;AAGD,K;;UAqBDC,a,GAAgB,YAAM;AACpB,UAAG,MAAKC,gBAAL,EAAH,EAA2B;AACzB,cAAKC,KAAL,CAAWC,YAAX,CAAwB,MAAKrB,KAA7B;AACD;AACF,K;;;;;;;WAvBD,4BAAkB;AAChB,UAAIO,WAAW,GAAG,KAAKP,KAAL,CAAWO,WAA7B;AACA,UAAIN,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AACA,UAAIU,MAAM,GAAG,EAAb;AACA,UAAIW,WAAW,GAAG,IAAlB;;AAEA,UAAGf,WAAW,KAAK,EAAnB,EAAsB;AACpBe,QAAAA,WAAW,GAAG,KAAd;AACAX,QAAAA,MAAM,CAAC,aAAD,CAAN,GAAwB,iBAAxB;AACD;;AAED,UAAGV,IAAI,KAAK,EAAZ,EAAe;AACbqB,QAAAA,WAAW,GAAG,KAAd;AACAX,QAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,iBAAjB;AACD;;AACD,WAAKG,QAAL,CAAc;AAACH,QAAAA,MAAM,EAAEA;AAAT,OAAd;AACA,aAAOW,WAAP;AACD;;;WAQD,kBAAS;AACP,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAA,wCACE;AAAO,kBAAA,IAAI,EAAC,aAAZ;AAA0B,kBAAA,QAAQ,EAAE,KAAKV,iBAAzC;AAA4D,kBAAA,IAAI,EAAC,MAAjE;AAAwE,kBAAA,SAAS,EAAC,cAAlF;AAAiG,kBAAA,WAAW,EAAC;AAA7G;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAM,kBAAA,SAAS,EAAC,OAAhB;AAAA,4BAAyB,KAAKZ,KAAL,CAAWW,MAAX,CAAkB,aAAlB;AAAzB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAU,gBAAA,IAAI,EAAC,MAAf;AAAsB,gBAAA,QAAQ,EAAE,KAAKC,iBAArC;AAAwD,gBAAA,IAAI,EAAC,MAA7D;AAAoE,gBAAA,SAAS,EAAC,mBAA9E;AAAkG,gBAAA,WAAW,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAM,gBAAA,SAAS,EAAC,OAAhB;AAAA,0BAAyB,KAAKZ,KAAL,CAAWW,MAAX,CAAkB,MAAlB;AAAzB;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAUI;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAAoC,cAAA,KAAK,EAAE;AAACY,gBAAAA,KAAK,EAAE;AAAR,eAA3C;AAA6D,cAAA,OAAO,EAAE,KAAKL,aAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAkBD;;;;EApEsBtB,S;;AAuEzB,eAAeG,UAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './index.css'\r\n\r\nclass AddComment extends Component {\r\n\r\n  state = {\r\n    body: '',\r\n    //hard coding post id because there's only one post\r\n    post_id: '9ba7b1d5-94e0-41bd-a380-e2f953ffe58c',\r\n    comment_id: uuidv4(),\r\n    parent_id: '',\r\n    likes: 0,\r\n    poster: uuidv4(),\r\n    poster_name: '',\r\n    id: '',\r\n    created_at: '',\r\n    updated_at: '',\r\n    errors: {}\r\n  }\r\n\r\n\r\n  handleFieldChange = (comment) => {\r\n    this.setState({\r\n      [comment.target.name]: comment.target.value\r\n    })\r\n  }\r\n\r\n  handleValidation(){\r\n    let poster_name = this.state.poster_name;\r\n    let body = this.state.body;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if(poster_name === \"\"){\r\n      formIsValid = false;\r\n      errors[\"poster_name\"] = \"Cannot be empty\";\r\n    }\r\n\r\n    if(body === \"\"){\r\n      formIsValid = false;\r\n      errors[\"body\"] = \"Cannot be empty\";\r\n    }\r\n    this.setState({errors: errors});\r\n    return formIsValid;\r\n  }\r\n\r\n  createComment = () => {\r\n    if(this.handleValidation()){\r\n      this.props.storeComment(this.state)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <h4 className=\"text-center mb-5\">Add new Comment</h4>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                <input name=\"poster_name\" onChange={this.handleFieldChange} type=\"text\" className=\"form-control\" placeholder=\"Name\"/>\r\n                <span className=\"error\">{this.state.errors[\"poster_name\"]}</span>\r\n              </label>\r\n              <textarea name=\"body\" onChange={this.handleFieldChange} type=\"text\" className=\"form-control body\" placeholder=\"Body\"/>\r\n              <span className=\"error\">{this.state.errors[\"body\"]}</span>\r\n            </div>\r\n              <button className=\"btn btn-success\" style={{float: \"right\"}} onClick={this.createComment}>Post Comment</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddComment\r\n"]},"metadata":{},"sourceType":"module"}