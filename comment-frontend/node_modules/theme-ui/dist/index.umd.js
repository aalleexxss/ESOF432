(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@theme-ui/core'), require('@theme-ui/color-modes'), require('@theme-ui/mdx'), require('@theme-ui/theme-provider'), require('@theme-ui/components'), require('@theme-ui/css')) :
  typeof define === 'function' && define.amd ? define(['exports', '@theme-ui/core', '@theme-ui/color-modes', '@theme-ui/mdx', '@theme-ui/theme-provider', '@theme-ui/components', '@theme-ui/css'], factory) :
  (global = global || self, factory(global.themeUi = {}, global.core, global.colorModes, global.mdx, global.themeProvider, global.components, global.css));
}(this, (function (exports, core, colorModes, mdx, themeProvider, components, css) {
  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  var BaseStyles = function BaseStyles(props) {
    return jsx('div', _extends({}, props, {
      sx: {
        fontFamily: 'body',
        lineHeight: 'body',
        fontWeight: 'body',
        variant: 'styles'
      }
    }));
  };
  var jsx = core.jsx;

  Object.keys(components).forEach(function (k) {
    if (k !== 'default') Object.defineProperty(exports, k, {
      enumerable: true,
      get: function () {
        return components[k];
      }
    });
  });
  Object.defineProperty(exports, 'Context', {
    enumerable: true,
    get: function () {
      return core.Context;
    }
  });
  Object.defineProperty(exports, 'merge', {
    enumerable: true,
    get: function () {
      return core.merge;
    }
  });
  Object.defineProperty(exports, 'useThemeUI', {
    enumerable: true,
    get: function () {
      return core.useThemeUI;
    }
  });
  Object.defineProperty(exports, 'InitializeColorMode', {
    enumerable: true,
    get: function () {
      return colorModes.InitializeColorMode;
    }
  });
  Object.defineProperty(exports, 'useColorMode', {
    enumerable: true,
    get: function () {
      return colorModes.useColorMode;
    }
  });
  Object.defineProperty(exports, 'Themed', {
    enumerable: true,
    get: function () {
      return mdx.Themed;
    }
  });
  Object.defineProperty(exports, 'components', {
    enumerable: true,
    get: function () {
      return mdx.components;
    }
  });
  Object.defineProperty(exports, 'ThemeProvider', {
    enumerable: true,
    get: function () {
      return themeProvider.ThemeProvider;
    }
  });
  Object.defineProperty(exports, 'css', {
    enumerable: true,
    get: function () {
      return css.css;
    }
  });
  Object.defineProperty(exports, 'get', {
    enumerable: true,
    get: function () {
      return css.get;
    }
  });
  exports.BaseStyles = BaseStyles;
  exports.jsx = jsx;

})));
//# sourceMappingURL=index.umd.js.map
