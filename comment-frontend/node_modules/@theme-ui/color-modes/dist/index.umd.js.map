{"version":3,"file":"index.umd.js","sources":["../src/custom-properties.ts","../src/index.tsx"],"sourcesContent":["import { css, get, Theme, __internalGetUseRootStyles } from '@theme-ui/css'\n\nconst stripKeyDefault = (key: string) => key.replace('-__default', '')\nconst toVarName = (key: string) => `--theme-ui-${stripKeyDefault(key)}`\nconst toVarValue = (key: string, value: string | number) =>\n  `var(${toVarName(key)}, ${value})`\n\nconst join = (...args: (string | undefined)[]) => args.filter(Boolean).join('-')\n\nconst numberScales = {\n  fontWeights: true,\n  lineHeights: true,\n}\nconst reservedKeys = {\n  useCustomProperties: true,\n  initialColorModeName: true,\n  printColorModeName: true,\n  initialColorMode: true,\n  useLocalStorage: true,\n}\n\nconst toPixel = (key: string, value: string | number) => {\n  if (typeof value !== 'number') return value\n  if (numberScales[key as keyof typeof numberScales]) return value\n  return value + 'px'\n}\n\n// convert theme values to custom properties\nexport const toCustomProperties = (\n  obj: Record<string, any> | undefined,\n  parent?: string,\n  themeKey?: string\n) => {\n  const next: Record<string, any> = Array.isArray(obj) ? [] : {}\n\n  for (let key in obj) {\n    const value = obj[key]\n    const name = join(parent, key)\n    if (value && typeof value === 'object') {\n      next[key] = toCustomProperties(value, name, key)\n      continue\n    }\n    if (reservedKeys[key as keyof typeof reservedKeys]) {\n      next[key] = value\n      continue\n    }\n    const val = toPixel(themeKey || key, value)\n    next[key] = toVarValue(name, val)\n  }\n\n  return next\n}\n\nexport const objectToVars = (parent: string, obj: Record<string, any>) => {\n  let vars: Record<string, object> = {}\n  for (let key in obj) {\n    if (key === 'modes') continue\n    const name = join(parent, key)\n    const value = obj[key]\n    if (value && typeof value === 'object') {\n      vars = {\n        ...vars,\n        ...objectToVars(name, value),\n      }\n    } else {\n      vars[toVarName(name)] = value\n    }\n  }\n  return vars\n}\n\n// create root styles for color modes\nexport const createColorStyles = (theme: Theme = {}) => {\n  const use = __internalGetUseRootStyles(theme)\n  if (!theme.colors || use.rootStyles === false) return {}\n  if (theme.useCustomProperties === false || !theme.colors.modes) {\n    return css({\n      [use.scope]: {\n        color: 'text',\n        bg: 'background',\n      },\n    })(theme)\n  }\n  const { colors, initialColorModeName, printColorModeName } = theme\n  const modes = colors.modes || {}\n  const styles = objectToVars('colors', colors)\n\n  Object.keys(modes).forEach((mode) => {\n    const key = `&.theme-ui-${mode}`\n    styles[key] = objectToVars('colors', modes[mode])\n  })\n  if (printColorModeName) {\n    const mode =\n      printColorModeName === 'initial' ||\n      printColorModeName === initialColorModeName\n        ? colors\n        : modes[printColorModeName]\n    styles['@media print'] = objectToVars('colors', mode)\n  }\n  const colorToVarValue = (color: string) =>\n    toVarValue(`colors-${color}`, get(theme, `colors.${color}`))\n\n  return css({\n    [use.scope]: {\n      ...styles,\n      color: colorToVarValue('text'),\n      bg: colorToVarValue('background'),\n    },\n  })(theme)\n}\n","import React, { Dispatch, SetStateAction } from 'react'\nimport { jsx, useThemeUI, merge, Context } from '@theme-ui/core'\nimport { get, Theme } from '@theme-ui/css'\nimport { Global, ThemeContext as EmotionContext } from '@emotion/react'\nimport { toCustomProperties, createColorStyles } from './custom-properties'\n\nconst STORAGE_KEY = 'theme-ui-color-mode'\n\ndeclare module '@theme-ui/core' {\n  export interface ContextValue {\n    colorMode?: string\n    setColorMode?: (colorMode: SetStateAction<string>) => void\n  }\n}\n\nconst storage = {\n  get: (init?: string) => {\n    try {\n      return window.localStorage.getItem(STORAGE_KEY) || init\n    } catch (e) {\n      console.warn(\n        'localStorage is disabled and color mode might not work as expected.',\n        'Please check your Site Settings.',\n        e\n      )\n    }\n  },\n  set: (value: string) => {\n    try {\n      window.localStorage.setItem(STORAGE_KEY, value)\n    } catch (e) {\n      console.warn(\n        'localStorage is disabled and color mode might not work as expected.',\n        'Please check your Site Settings.',\n        e\n      )\n    }\n  },\n}\n\nconst getPreferredColorScheme = (): 'dark' | 'light' | null => {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark'\n    }\n    if (window.matchMedia('(prefers-color-scheme: light)').matches) {\n      return 'light'\n    }\n  }\n  return null\n}\n\nconst useColorModeState = (theme: Theme = {}) => {\n  const [mode, setMode] = React.useState(() => {\n    const preferredMode =\n      theme.useColorSchemeMediaQuery !== false && getPreferredColorScheme()\n\n    return preferredMode || theme.initialColorModeName || 'default'\n  })\n\n  // read color mode from local storage\n  React.useEffect(() => {\n    const stored = theme.useLocalStorage !== false && storage.get()\n    document.documentElement.classList.remove('theme-ui-' + stored)\n    document.body.classList.remove('theme-ui-' + stored)\n\n    if (stored && stored !== mode) {\n      setMode(stored)\n    }\n  }, [])\n\n  React.useEffect(() => {\n    if (mode && theme.useLocalStorage !== false) {\n      storage.set(mode)\n    }\n  }, [mode])\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (\n      theme.colors &&\n      theme.colors.modes &&\n      theme.initialColorModeName &&\n      Object.keys(theme.colors.modes).indexOf(theme.initialColorModeName) > -1\n    ) {\n      console.warn(\n        'The `initialColorModeName` value should be a unique name' +\n          ' and cannot reference a key in `theme.colors.modes`.'\n      )\n    }\n  }\n\n  return [mode, setMode] as const\n}\n\nexport function useColorMode<T extends string = string>(): [\n  T,\n  Dispatch<SetStateAction<T>>\n] {\n  const { colorMode, setColorMode } = useThemeUI()\n\n  if (typeof setColorMode !== 'function') {\n    throw new Error(`[useColorMode] requires the ColorModeProvider component`)\n  }\n\n  // We're allowing the user to specify a narrower type for its color mode name.\n  return ([colorMode, setColorMode] as unknown) as [\n    T,\n    Dispatch<SetStateAction<T>>\n  ]\n}\n\nconst applyColorMode = (theme: Theme, mode: string): Theme => {\n  if (!mode) return theme\n  const modes = get(theme, 'colors.modes', {})\n  return merge.all({}, theme, {\n    colors: get(modes, mode, {}),\n  })\n}\n\nconst BodyStyles = ({ theme }: { theme: Theme }) =>\n  jsx(Global, {\n    styles: () => {\n      return createColorStyles(theme)\n    },\n  })\n\nexport const ColorModeProvider: React.FC = ({ children }) => {\n  const outer = useThemeUI()\n  const [colorMode, setColorMode] = useColorModeState(outer.theme)\n  const theme = applyColorMode(outer.theme || {}, colorMode)\n  const emotionTheme = { ...theme }\n\n  if (theme.useCustomProperties !== false) {\n    emotionTheme.colors = toCustomProperties(emotionTheme.colors, 'colors')\n  }\n\n  const context = {\n    ...outer,\n    theme,\n    colorMode,\n    setColorMode,\n  }\n\n  return jsx(\n    EmotionContext.Provider,\n    { value: emotionTheme },\n    jsx(\n      Context.Provider,\n      { value: context },\n      jsx(BodyStyles, { key: 'color-mode', theme }),\n      children\n    )\n  )\n}\n\nconst noflash = `(function() { try {\n  var mode = localStorage.getItem('theme-ui-color-mode');\n  if (!mode) return\n  document.documentElement.classList.add('theme-ui-' + mode);\n  document.body.classList.add('theme-ui-' + mode);\n} catch (e) {} })();`\n\nexport const InitializeColorMode = () =>\n  jsx('script', {\n    key: 'theme-ui-no-flash',\n    dangerouslySetInnerHTML: {\n      __html: noflash,\n    },\n  })\n"],"names":["stripKeyDefault","key","replace","toVarName","toVarValue","value","join","filter","Boolean","numberScales","fontWeights","lineHeights","reservedKeys","useCustomProperties","initialColorModeName","printColorModeName","initialColorMode","useLocalStorage","toPixel","toCustomProperties","obj","parent","themeKey","next","Array","isArray","name","val","objectToVars","vars","createColorStyles","theme","use","__internalGetUseRootStyles","colors","rootStyles","modes","css","scope","color","bg","styles","Object","keys","forEach","mode","colorToVarValue","get","STORAGE_KEY","storage","init","window","localStorage","getItem","e","console","warn","set","setItem","getPreferredColorScheme","matchMedia","matches","useColorModeState","React","useState","preferredMode","useColorSchemeMediaQuery","setMode","useEffect","stored","document","documentElement","classList","remove","body","process","env","NODE_ENV","indexOf","useColorMode","useThemeUI","colorMode","setColorMode","Error","applyColorMode","merge","all","BodyStyles","jsx","Global","ColorModeProvider","children","outer","emotionTheme","context","EmotionContext","Provider","Context","noflash","InitializeColorMode","dangerouslySetInnerHTML","__html"],"mappings":"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"}