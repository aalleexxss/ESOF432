{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { jsx, IntrinsicSxElements } from '@theme-ui/core'\nimport { css, get, Theme } from '@theme-ui/css'\nimport {\n  ComponentType,\n  FC,\n  ReactNode,\n  DetailedHTMLProps,\n  HTMLAttributes,\n  ElementType,\n  ComponentProps,\n} from 'react'\nimport styled, { StyledComponent } from '@emotion/styled'\nimport { MDXProvider as _MDXProvider, useMDXComponents } from '@mdx-js/react'\n\ntype MDXProviderComponentsKnownKeys = {\n  [key in keyof IntrinsicSxElements]?: ComponentType<any> | string\n}\nexport interface MDXProviderComponents extends MDXProviderComponentsKnownKeys {\n  [key: string]: ComponentType<any> | string | undefined\n}\nexport type MdxAliases = {\n  [key in keyof IntrinsicSxElements]: keyof JSX.IntrinsicElements\n}\n\nexport type MdxAliasesKeys = 'inlineCode' | 'thematicBreak' | 'root'\n\nexport type ThemedProps = {\n  theme: Theme\n}\n\nexport interface MdxProviderProps {\n  components?: MDXProviderComponents\n  children: ReactNode\n}\n\n// mdx components\nconst tags: Array<keyof IntrinsicSxElements> = [\n  'p',\n  'b',\n  'i',\n  'a',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'img',\n  'pre',\n  'code',\n  'ol',\n  'ul',\n  'li',\n  'blockquote',\n  'hr',\n  'em',\n  'table',\n  'tr',\n  'th',\n  'td',\n  'em',\n  'strong',\n  'del',\n  // mdx\n  'inlineCode',\n  'thematicBreak',\n  // other\n  'div',\n  // theme-ui\n  'root',\n]\n\nconst aliases = {\n  inlineCode: 'code',\n  thematicBreak: 'hr',\n  root: 'div',\n} as const\n\ntype Aliases = typeof aliases\nconst isAlias = (x: string): x is keyof Aliases => x in aliases\n\nexport type ThemedComponentName =\n  | keyof IntrinsicSxElements\n  | keyof JSX.IntrinsicElements\n\nconst alias = (n: ThemedComponentName): keyof JSX.IntrinsicElements =>\n  isAlias(n) ? aliases[n] : n\n\nconst propOverrides: {\n  [key in Partial<ThemedComponentName>]?: Record<string, string>\n} = {\n  th: {\n    align: 'textAlign',\n  },\n  td: {\n    align: 'textAlign',\n  },\n}\nexport const themed = (key: ThemedComponentName) => ({\n  theme,\n  ...rest\n}: ThemedProps) => {\n  const propsStyle = propOverrides[key]\n\n  const extraStyles = propsStyle\n    ? Object.keys(rest)\n        .filter((prop) => propsStyle[prop] !== undefined)\n        .reduce(\n          (acc, prop) => ({\n            ...acc,\n            [propsStyle[prop]]: (rest as Record<string, string>)[prop],\n          }),\n          {}\n        )\n    : undefined\n  return css({ ...get(theme, `styles.${key}`), ...extraStyles })(theme)\n}\n\n// opt out of typechecking whenever `as` prop is used\ninterface AnyComponentProps extends JSX.IntrinsicAttributes {\n  [key: string]: unknown\n}\n\nexport type WithPoorAsProp<\n  Props,\n  As extends ElementType | undefined = undefined\n> = {\n  as?: As\n} & (undefined extends As\n  ? As extends undefined\n    ? Props\n    : AnyComponentProps\n  : AnyComponentProps)\n\nexport interface ThemedComponent<Name extends ElementType> {\n  <As extends ElementType | undefined = undefined>(\n    props: WithPoorAsProp<ComponentProps<Name>, As>\n  ): JSX.Element\n}\n\nexport type ThemedComponentsDict = {\n  [K in keyof IntrinsicSxElements]: K extends keyof Aliases\n    ? ThemedComponent<Aliases[K]>\n    : K extends keyof JSX.IntrinsicElements\n    ? ThemedComponent<K>\n    : never\n}\n\ntype ThemedDiv = StyledComponent<\n  DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>,\n  ThemedProps,\n  Theme\n>\n\nexport const Themed: ThemedDiv & ThemedComponentsDict = styled('div')(\n  themed('div')\n) as ThemedDiv & ThemedComponentsDict\n\nexport const components = {} as ThemedComponentsDict\n\ntags.forEach((tag) => {\n  // fixme?\n  components[tag] = styled(alias(tag))(themed(tag)) as any\n  Themed[tag] = components[tag] as any\n})\n\nconst createComponents = (comps: MDXProviderComponents) => {\n  const next = { ...components }\n\n  const componentKeys = Object.keys(comps) as Array<keyof IntrinsicSxElements>\n\n  componentKeys.forEach((key) => {\n    ;(next[key] as ThemedComponentsDict[typeof key]) = styled<any>(comps[key])(\n      themed(key)\n    ) as ThemedComponentsDict[typeof key]\n  })\n  return next\n}\n\nexport const MDXProvider: FC<MdxProviderProps> = ({ components, children }) => {\n  const outer = useMDXComponents() as MDXProviderComponents\n\n  return jsx(_MDXProvider, {\n    components: createComponents({ ...outer, ...components }),\n    children,\n  })\n}\n"],"names":["tags","aliases","inlineCode","thematicBreak","root","isAlias","x","alias","n","propOverrides","th","align","td","themed","key","theme","rest","propsStyle","extraStyles","Object","keys","filter","prop","undefined","reduce","acc","css","get","Themed","styled","components","forEach","tag","createComponents","comps","next","componentKeys","MDXProvider","children","outer","useMDXComponents","jsx","_MDXProvider"],"mappings":"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"}